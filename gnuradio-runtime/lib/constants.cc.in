/* -*- c++ -*- */
/*
 * Copyright 2006,2009,2013 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * GNU Radio is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 *
 * GNU Radio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GNU Radio; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */

#if HAVE_CONFIG_H
#include <config.h>
#endif

#include <gnuradio/constants.h>
#include <Pothos/System/Paths.hpp>
#include <Poco/Path.h>

namespace gr {

  const std::string
  prefix()
  {
    return Pothos::System::getRootPath();
  }

  const std::string
  sysconfdir()
  {
    if (prefix() == "/usr") return "/etc";
    Poco::Path sysConfPath(prefix());
    sysConfPath.append("etc");
    return sysConfPath.toString();
  }

  const std::string
  prefsdir()
  {
    Poco::Path sysPrefsPath(sysconfdir());
    sysPrefsPath.append("gnuradio");
    sysPrefsPath.append("conf.d");
    return sysPrefsPath.toString();
  }

  const std::string
  build_date()
  {
    return "@BUILD_DATE@";
  }

  const std::string
  version()
  {
    return "@VERSION@";
  }

  // Return individual parts of the version
  const std::string
  major_version()
  {
    return "@MAJOR_VERSION@";
  }

  const std::string
  api_version()
  {
    return "@API_COMPAT@";
  }

  const std::string
  minor_version()
  {
    return "@MINOR_VERSION@";
  }

  const std::string
  c_compiler()
  {
    return "@cmake_c_compiler_version@";
  }

  const std::string
  cxx_compiler()
  {
    return "@cmake_cxx_compiler_version@";
  }

  const std::string
  compiler_flags()
  {
    return "@COMPILER_INFO@";
  }

  const std::string
  build_time_enabled_components()
  {
    return "@_gr_enabled_components@";
  }
} /* namespace gr */
